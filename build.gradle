import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

def javaFXPlatform = getJavaFXPlatform()
def javaFXVersion = "15.0.1"

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'

    implementation "org.openjfx:javafx-base:${javaFXVersion}:${javaFXPlatform}"
    implementation "org.openjfx:javafx-controls:${javaFXVersion}:${javaFXPlatform}"
    implementation "org.openjfx:javafx-graphics:${javaFXVersion}:${javaFXPlatform}"

    // This dependency is used by the application.
    //implementation 'com.google.guava:guava:29.0-jre'
    //implementation 'org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0'

    implementation ('com.calendarfx:view:11.8.3'){
        exclude module: 'javafx.controls;'
    }

    //implementation 'eu.hansolo:tilesfx:11.48'
    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    // https://mvnrepository.com/artifact/org.json/json
    implementation group: 'org.json', name: 'json', version: '20090211'
    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpcore
    implementation group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.14'
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    // https://mvnrepository.com/artifact/com.auth0/java-jwt
    implementation group: 'com.auth0', name: 'java-jwt', version: '3.18.1'



    //compile 'com.jfoenix:jfoenix:9.0.10'




}


application {
    // Define the main class for the application.
    mainClass.set('Artemis.App')

}

java{
    modularity.inferModulePath.set(true)
}

mainClassName = 'Artemis.App'

private static String getJavaFXPlatform() {
    def currentOS = DefaultNativePlatform.currentOperatingSystem;
    if (currentOS.isWindows()) {
        return 'win'
    } else if (currentOS.isLinux()) {
        return 'linux'
    } else if (currentOS.isMacOsX()) {
        return 'mac'
    }
    return null
}





